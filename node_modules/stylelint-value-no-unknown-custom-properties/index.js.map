{"version":3,"file":"index.js","sources":["src/lib/get-custom-properties-from-root.js","src/lib/get-custom-properties-from-imports.js","src/lib/rule-name.js","src/lib/messages.js","src/lib/validate-decl.js","src/lib/validate-result.js","src/index.js"],"sourcesContent":["// return custom selectors from the css root, conditionally removing them\nexport default root => {\n\t// initialize custom selectors\n\tconst customProperties = {};\n\n\t// for each custom property declaration\n\troot.walkDecls(customPropertyRegExp, decl => {\n\t\tconst { prop } = decl;\n\n\t\t// write the parsed value to the custom property\n\t\tcustomProperties[prop] = decl.value;\n\t});\n\n\t// return all custom properties, preferring :root properties over html properties\n\treturn customProperties;\n};\n\n// match custom properties\nconst customPropertyRegExp = /^--[A-z][\\w-]*$/;\n","import fs from 'fs';\nimport path from 'path';\nimport postcss from 'postcss';\nimport getCustomPropertiesFromRoot from './get-custom-properties-from-root';\n\n/* Get Custom Properties from CSS File\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromCSSFile(from) {\n\tconst css = await readFile(from);\n\tconst root = postcss.parse(css, { from });\n\n\treturn getCustomPropertiesFromRoot(root);\n}\n\n/* Get Custom Properties from Object\n/* ========================================================================== */\n\nfunction getCustomPropertiesFromObject(object) {\n\tconst customProperties = Object.assign(\n\t\t{},\n\t\tObject(object).customProperties,\n\t\tObject(object)['custom-properties']\n\t);\n\n\treturn customProperties;\n}\n\n/* Get Custom Properties from JSON file\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromJSONFile(from) {\n\tconst object = await readJSON(from);\n\n\treturn getCustomPropertiesFromObject(object);\n}\n\n/* Get Custom Properties from JS file\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromJSFile(from) {\n\tconst object = await import(from);\n\n\treturn getCustomPropertiesFromObject(object);\n}\n\n/* Get Custom Properties from Sources\n/* ========================================================================== */\n\nexport default function getCustomPropertiesFromSources(sources) {\n\treturn sources.map(source => {\n\t\tif (source instanceof Promise) {\n\t\t\treturn source;\n\t\t} else if (source instanceof Function) {\n\t\t\treturn source();\n\t\t}\n\n\t\t// read the source as an object\n\t\tconst opts = source === Object(source) ? source : { from: String(source) };\n\n\t\t// skip objects with Custom Properties\n\t\tif (opts.customProperties || opts['custom-properties']) {\n\t\t\treturn opts\n\t\t}\n\n\t\t// source pathname\n\t\tconst from = path.resolve(String(opts.from || ''));\n\n\t\t// type of file being read from\n\t\tconst type = (opts.type || path.extname(from).slice(1)).toLowerCase();\n\n\t\treturn { type, from };\n\t}).reduce(async (customProperties, source) => {\n\t\tconst { type, from } = await source;\n\n\t\tif (type === 'css') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromCSSFile(from));\n\t\t}\n\n\t\tif (type === 'js') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromJSFile(from));\n\t\t}\n\n\t\tif (type === 'json') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromJSONFile(from));\n\t\t}\n\n\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromObject(await source));\n\t}, {});\n}\n\n/* Promise-ified utilities\n/* ========================================================================== */\n\nconst readFile = from => new Promise((resolve, reject) => {\n\tfs.readFile(from, 'utf8', (error, result) => {\n\t\tif (error) {\n\t\t\treject(error);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n});\n\nconst readJSON = async from => JSON.parse(await readFile(from));\n","export default 'csstools/value-no-unknown-custom-properties';\n","import stylelint from 'stylelint';\nimport ruleName from './rule-name';\n\nexport default stylelint.utils.ruleMessages(ruleName, {\n\tunexpected: (name, prop) => `Unexpected custom property \"${name}\" inside declaration \"${prop}\".`,\n});\n","import stylelint from 'stylelint';\nimport { parse } from 'postcss-values-parser';\nimport ruleName from './rule-name';\nimport messages from './messages';\n\n// validate css declarations\nexport default (decl, { result, customProperties }) => {\n\tconst valueAST = parse(decl.value);\n\n\tvalidateValueAST(valueAST, { result, customProperties, decl });\n};\n\n// validate a value ast\nconst validateValueAST = (ast, { result, customProperties, decl }) => {\n\tif (Object(ast.nodes).length) {\n\t\tast.nodes.forEach(node => {\n\t\t\tif (isVarFunction(node)) {\n\t\t\t\tconst [propertyNode, comma, ...fallbacks] = node.nodes;\n\t\t\t\tconst propertyName = propertyNode.value;\n\n\t\t\t\tif (propertyName in customProperties) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// conditionally test fallbacks\n\t\t\t\tif (fallbacks.length) {\n\t\t\t\t\tvalidateValueAST({ nodes: fallbacks.filter(isVarFunction) }, { result, customProperties, decl });\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// report unknown custom properties\n\t\t\t\tstylelint.utils.report({\n\t\t\t\t\tmessage: messages.unexpected(propertyName, decl.prop),\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tword: String(propertyName)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalidateValueAST(node, { result, customProperties, decl });\n\t\t\t}\n\t\t});\n\t}\n};\n\n// whether the node is a var() function\nconst isVarFunction = node => node.type === 'func' && node.name === 'var' && node.nodes[0].isVariable;\n","import validateDecl from './validate-decl';\n\n// validate the css root\nexport default (result, customProperties) => {\n\t// validate each declaration\n\tresult.root.walkDecls(decl => {\n\t\tif (hasCustomPropertyReference(decl)) {\n\t\t\tvalidateDecl(decl, { result, customProperties });\n\t\t}\n\t});\n};\n\n// match custom property inclusions\nconst customPropertyReferenceRegExp = /(^|[^\\w-])var\\([\\W\\w]+\\)/;\n\n// whether a declaration references a custom property\nconst hasCustomPropertyReference = decl => customPropertyReferenceRegExp.test(decl.value);\n\n","import stylelint from 'stylelint';\nimport getCustomPropertiesFromRoot from './lib/get-custom-properties-from-root';\nimport getCustomPropertiesFromImports from './lib/get-custom-properties-from-imports';\nimport validateResult from './lib/validate-result';\nimport ruleName from './lib/rule-name';\n\nexport default stylelint.createPlugin(ruleName, (method, opts) => {\n\t// sources to import custom selectors from\n\tconst importFrom = [].concat(Object(opts).importFrom || []);\n\n\t// promise any custom selectors are imported\n\tconst customPropertiesPromise = isMethodEnabled(method)\n\t\t? getCustomPropertiesFromImports(importFrom)\n\t: {};\n\n\treturn async (root, result) => {\n\t\t// validate the method\n\t\tconst isMethodValid = stylelint.utils.validateOptions(result, ruleName, {\n\t\t\tactual: method,\n\t\t\tpossible() {\n\t\t\t\treturn isMethodEnabled(method) || isMethodDisabled(method);\n\t\t\t}\n\t\t});\n\n\t\tif (isMethodValid && isMethodEnabled(method)) {\n\t\t\t// all custom properties from the file and imports\n\t\t\tconst customProperties = Object.assign(\n\t\t\t\tawait customPropertiesPromise,\n\t\t\t\tgetCustomPropertiesFromRoot(root)\n\t\t\t);\n\n\t\t\t// validate the css root\n\t\t\tvalidateResult(result, customProperties);\n\t\t}\n\t};\n});\n\nexport { ruleName }\n\nconst isMethodEnabled = method => method === true;\nconst isMethodDisabled = method => method === null || method === false;\n"],"names":["root","customProperties","walkDecls","customPropertyRegExp","decl","prop","value","getCustomPropertiesFromCSSFile","from","css","readFile","postcss","parse","getCustomPropertiesFromRoot","getCustomPropertiesFromObject","object","Object","assign","getCustomPropertiesFromJSONFile","readJSON","getCustomPropertiesFromJSFile","getCustomPropertiesFromSources","sources","map","source","Promise","Function","opts","String","path","resolve","type","extname","slice","toLowerCase","reduce","reject","fs","error","result","JSON","stylelint","utils","ruleMessages","ruleName","unexpected","name","valueAST","validateValueAST","ast","nodes","length","forEach","node","isVarFunction","propertyNode","comma","fallbacks","propertyName","filter","report","message","messages","word","isVariable","hasCustomPropertyReference","validateDecl","customPropertyReferenceRegExp","test","createPlugin","method","importFrom","concat","customPropertiesPromise","isMethodEnabled","getCustomPropertiesFromImports","isMethodValid","validateOptions","actual","possible","isMethodDisabled","validateResult"],"mappings":"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"}